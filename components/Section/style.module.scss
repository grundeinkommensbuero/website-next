.editSection {
  background: white;
  height: 2rem;
  border: 1px dashed black;
}

.editElement {
  background: white;
  height: 2rem;
  width: 100%;
  border: 1px dashed black;
  margin-bottom: 1rem;
  display: flex;
}

.dropdown {
  position: relative;
  display: inline-block;
}

.dropdown:hover .dropdownContent {
  display: block;
}

.dropdownContent {
  display: none;
  position: absolute;
  background-color: #f9f9f9;
  min-width: 8rem;
  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
  z-index: 1;
}

.dropdownEditRow {
  position: relative;
  display: inline-block;
}

.dropdownEditRow:hover .dropdownEditRowContent {
  display: flex;
}

.dropdownEditRowContent {
  display: none;
  position: absolute;
  background-color: #f9f9f9;
  min-width: 8rem;
  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
  z-index: 1;
  margin-top: -0.25rem;
}

.optionButton {
  display: block;
  padding: 1rem;
  width: 100%;
  text-align: left;

  &:hover {
    font-weight: 600;
  }
}

.hide {
  display: none;
}

.themePreview {
  border-radius: 50%;
  border: 1px solid black;
  height: 1rem;
  width: 1rem;
}

.flexRight {
  margin-left: 50%;
}

.flexLeft {
  margin-right: 50%;
}

.draftSection {
  border: 5px dashed black;
  position: relative;
}

.draftLabel {
  position: absolute;
  top: 0.5rem;
  right: 0.5rem;
}

.sectionWrapper {
  padding: 4rem 0;

  @media (max-width: $breakPointS) {
    padding: 3rem 0;
  }

  &.hasHero {
    padding-top: 1rem;
  }
}

.sectionHero {
  height: 600px; /* was 400px */
  width: 100%;
  position: relative;
  display: flex;
  align-items: flex-end;

  @media (max-width: $breakPointM) {
    height: 200px;
  }
}

/* not wanted for Hamburg
.sectionHeroImageOverlay {
  background: $white;
  background: linear-gradient(0deg, $white, transparent);
  position: absolute;
  top: 0;
  left: 0;
  height: 400px;
  width: 100%;

  @media (max-width: $breakPointM) {
    height: 200px;
  }
}
*/

.sectionHeroTitle {
  position: relative;
  max-width: $headerWidth;
  margin: 0 auto;
  z-index: 2;
  padding: 2rem 0;

  @media (max-width: $breakPointXL) {
    padding: 0 1rem;
  }
}

.elementContainer {
  max-width: $headerWidth;
  margin: auto;
  margin-top: 3rem;
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  grid-template-rows: auto;
  grid-auto-flow: column;

  @media (max-width: $breakPointM) {
    grid-template-columns: none;
    // Works for map section
    grid-template-columns: 1fr;
    margin-top: 2rem;
  }
}

.element {
  margin-bottom: 1rem;
  transition: all 0.25s ease-out;
  width: 100%;

  &.centerVertically {
    align-self: center;
  }
}

.elementLeft,
.elementRight {
  @media (max-width: $breakPointM) {
    justify-self: center;
  }
}

.elementLeft {
  grid-column-start: 1;
  grid-column-end: last-line;

  @media (min-width: $breakPointL) {
    padding-right: 2.5rem;
    grid-column-start: 1;
    grid-column-end: 4;
  }
}

.elementRight {
  grid-column-start: 1;
  grid-column-end: last-line;

  @media (min-width: $breakPointL) {
    padding-left: 2.5rem;
    grid-column-start: 4;
    grid-column-end: last-line;
  }
}

.elementLeftThird,
.elementRightThird,
.elementCenterThird {
  @media (max-width: $breakPointM) {
    justify-self: center;
    padding: 1rem 0 2rem 0;
  }

  @media (min-width: $breakPointM) {
    .hamburg & p {
      font-size: 0.9rem;
    }
  }
}

.elementLeftThird {
  grid-column-start: 1;
  grid-column-end: last-line;
  padding-top: 0;

  @media (min-width: calc($breakPointM + 1px)) {
    padding: 0 2.5rem 0 0;
    grid-column-start: 1;
    grid-column-end: 3;
    margin-bottom: 0;
  }
}

.elementRightThird {
  grid-column-start: 1;
  grid-column-end: last-line;

  @media (min-width: calc($breakPointM + 1px)) {
    padding: 0 0 0 2.5rem;
    grid-column-start: 5;
    grid-column-end: last-line;
  }
}

.elementCenterThird {
  grid-column-start: 1;
  grid-column-end: last-line;

  @media (min-width: calc($breakPointM + 1px)) {
    padding: 0 2.5rem;
    grid-column-start: 3;
    grid-column-end: 5;
  }
}

.elementCenterWide {
  grid-column-start: 1;
  grid-column-end: last-line;
}

.elementCenterNarrow {
  grid-column-start: 1;
  grid-column-end: last-line;
  @media (min-width: calc($breakPointM + 1px)) {
    grid-column-start: 2;
    grid-column-end: last-line;
  }
}

.groupedElement {
  margin-top: 1rem;
}

.jumpToAnchor {
  position: absolute;
  top: -$headerHeight;
}

.umapLink {
  display: block;
  text-align: center;
  margin-top: 5px;
}
